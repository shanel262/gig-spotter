version: '3.8'

services:
  backend:
    container_name: gig-spotter-backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - PORT=3010
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - gig-spotter-network
    restart: unless-stopped
    depends_on:
      - postgres
    # allow easy routing to postgres container
    links:
      - postgres

  frontend:
    container_name: gig-spotter-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3020:3020"
    environment:
      - REACT_APP_API_URL=http://localhost:3010
      - PORT=3020
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - gig-spotter-network
    restart: unless-stopped

  postgres:
    container_name: gig-spotter-postgres
    image: postgres:17.5-alpine
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gig-spotter"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gig-spotter-network
    restart: unless-stopped

networks:
  gig-spotter-network:
    driver: bridge

volumes:
  postgres_data:
